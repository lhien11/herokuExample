<div class="post">
    <h1>About My Ruby Blog</h1>
    <p>Wondering why Ruby is so popular? Its fans call it a beautiful, artful
  language. And yet, they say it’s handy and practical. What gives?</p>

  <h3>The Ideals of Ruby’s Creator</h3>

  <p class="links">Ruby is a language of careful balance. Its creator, <a href="http://www.rubyist.net/~matz/">Yukihiro “Matz”
  Matsumoto</a>, blended parts of his favorite languages (Perl, Smalltalk,
  Eiffel, Ada, and Lisp) to form a new language that balanced functional
  programming with imperative programming.</p>

  <p>He has often said that he is “trying to make Ruby natural, not simple,”
  in a way that mirrors life.</p>

  <p>Building on this, he adds:</p>

  <blockquote>
    <p class="links">Ruby is simple in appearance, but is very complex inside, just like
  our human body<sup><a href="#fn1">1</a></sup>.</p>
  </blockquote>

  <h3>About Ruby’s Growth</h3>

  <p>Since its public release in 1995, Ruby has drawn devoted coders
  worldwide. In 2006, Ruby achieved mass acceptance. With active user
  groups formed in the world’s major cities and Ruby-related conferences
  filled to capacity.</p>

  <p style="float:right"><img src="http://gmane.org/plot-rate.php?group=gmane.comp.lang.ruby.general&amp;width=320&amp;height=160&amp;title=Ruby-Talk+Activity" alt="Graph courtesy of
  Gmane." title="Graph courtesy of Gmane." style="padding-left:8px;" /></p>

  <p class="links">Ruby-Talk, the primary <a href="/en/community/mailing-lists/">mailing list</a> for
  discussion of the Ruby language, climbed to an average of 200 messages
  per day in 2006. It has dropped in recent years as the size of the
  community pushed discussion from one central list into many smaller
  groups.</p>

  <p class="links">Ruby is ranked among the top 10 on most of the indices that measure
  the growth and popularity of programming languages worldwide
  (such as the <a href="http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html">TIOBE index</a>). Much of the growth is attributed to the
  popularity of software written in Ruby, particularly the
  <a href="http://rubyonrails.org/">Ruby on Rails</a> web framework.</p>

  <p class="links">Ruby is also <a href="/en/about/license.txt">completely free</a>. Not only free of charge, but
  also free to use, copy, modify, and distribute.</p>

  <h3>Beyond the Basics</h3>

  <p>Ruby has a wealth of other features, among which are the following:</p>

  <ul>
    <li>
      <p>Ruby has exception handling features, like Java or Python, to make it
  easy to handle errors.</p>
    </li>
    <li>
      <p>Ruby features a true mark-and-sweep garbage collector for all Ruby
  objects. No need to maintain reference counts in extension libraries.
  As Matz says, “This is better for your health.”</p>
    </li>
    <li>
      <p>Writing C extensions in Ruby is easier than in Perl or Python, with a
  very elegant API for calling Ruby from C. This includes calls for
  embedding Ruby in software, for use as a scripting language. A SWIG
  interface is also available.</p>
    </li>
    <li>
      <p>Ruby can load extension libraries dynamically if an OS allows.</p>
    </li>
    <li>
      <p>Ruby features OS independent threading. Thus, for all platforms on
  which Ruby runs, you also have multithreading, regardless of if the OS
  supports it or not, even on MS-DOS!</p>
    </li>
    <li>
      <p>Ruby is highly portable: it is developed mostly on GNU/Linux, but
  works on many types of UNIX, Mac OS X, Windows 95/98/Me/NT/2000/XP,
  DOS, BeOS, OS/2, etc.</p>
    </li>
  </ul>

  <h3>References</h3>

  <p  class="links" id="fn1"><sup>1</sup> Matz, speaking on the Ruby-Talk mailing list, <a href="http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2773">May 12th,
  2000</a>.</p>

  <p  class="links" id="fn2"><sup>2</sup> Matz, in <a href="http://www.linuxdevcenter.com/pub/a/linux/2001/11/29/ruby.html">An Interview with the Creator of Ruby</a>, Nov.
  29th, 2001.</p>

  <p  class="links" id="fn3"><sup>3</sup> Matz, in <a href="http://www.artima.com/intv/closures2.html">Blocks and Closures in Ruby</a>, December 22nd,
  2003.</p>
</div>
